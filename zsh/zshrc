source /etc/profile

for file in ~/.zsh/zsh.d/*; do
  source $file
done

# any settings specific to this machine
if [[ -f ~/.config/local/zshrc ]]; then
  source ~/.config/local/zshrc
fi

# FuzzyFinder
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Syntax highlighting of CLI commands
source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Fuzzyfinder defaults.
FZF_DEFAULT_OPTS='--height 40% --reverse'
FZF_CTRL_T_OPTS='--preview "head -n 100 {}" --preview-window right'
FZF_DEFAULT_COMMAND='ag --ignore *.pyc -g ""'
FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# Use the base16 colorscheme
# # BASE16_SHELL=$HOME/.dotfiles/base16-shell/
# [ -n "$PS1" ] && [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"

eval "$(rbenv init - zsh)"

# NVM setup.
# https://github.com/nvm-sh/nvm
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# Find .nvmrc if it exists, and use specified node version.
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

